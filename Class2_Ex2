import time
import pygal
import snmp_helper

def main():
    a_user='pysnmp'
    auth_key= 'galileo1'
    encrypt_key='galileo1'
    IP= '50.242.94.227'
    snmp_user=(a_user, auth_key, encrypt_key)
    pynet_rtr2 = (IP, 8061)
    pynet_rtr1 = (IP, 7961)
    snmp_oids=(
      ('ifInOctets_fa4', '1.3.6.1.2.1.2.2.1.10.5'),
      ('ifOutOctets_fa4', '1.3.6.1.2.1.2.2.1.16.5'),
      ('ifInUcastPkts_fa4', '1.3.6.1.2.1.2.2.1.11.5'),
      ('ifOutUcastPkts_fa4', '1.3.6.1.2.1.2.2.1.17.5'),
     )
    input_octets_list=[]
    output_octets_list=[]
    input_pkts_list=[]
    output_pkts_list = []
    timeout=time.time() + 65
    octets_chart=pygal.Line()
    octets_chart.x_labels=[]
    pkts_chart=pygal.Line()
    t=0
    while True:
        if time.time() > timeout:

            break
        else:
            print 'collecting data for time = {}' .format(t)
            ######Collecting Octets stats######
            snmp_data_in=snmp_helper.snmp_get_oid_v3(pynet_rtr2, snmp_user, snmp_oids[0][1])
            input_octets= snmp_helper.snmp_extract(snmp_data_in)
            input_octets_list.append(int(input_octets)/100000)
            snmp_data_out=snmp_helper.snmp_get_oid_v3(pynet_rtr2, snmp_user, snmp_oids[1][1])
            output_octets= snmp_helper.snmp_extract(snmp_data_out)
            output_octets_list.append(int(output_octets)/100000)
            ###Collecting Pkts stats#####
            snmp_data_inpkts=snmp_helper.snmp_get_oid_v3(pynet_rtr2, snmp_user, snmp_oids[2][1])
            input_pkts= snmp_helper.snmp_extract(snmp_data_inpkts)
            input_pkts_list.append(int(input_pkts))
            snmp_data_outpkts=snmp_helper.snmp_get_oid_v3(pynet_rtr2, snmp_user, snmp_oids[3][1])
            output_pkts= snmp_helper.snmp_extract(snmp_data_outpkts)
            output_pkts_list.append(int(output_pkts))

        octets_chart.x_labels.append(str(t))
        pkts_chart.x_labels=octets_chart.x_labels
        t=t+5
        time.sleep(5)

    octets_chart.title='Input/Output Octets'

    octets_chart.add('Inoctets', input_octets_list)
    octets_chart.add('Outoctets', output_octets_list)
    octets_chart.render_to_file('octets.svg')

    pkts_chart.title='Input/Output Packets'
    pkts_chart.add('Input Packets', input_pkts_list)
    pkts_chart.add('Output Packets', output_pkts_list)
    pkts_chart.render_to_file('packets.svg')

if __name__=='__main__':
    main()
